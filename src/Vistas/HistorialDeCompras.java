/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import ProvemaxEntidades.Compra;
import ProvemaxEntidades.Producto;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import provemaxgrupo35.accesoDatos.CompraData;
import provemaxgrupo35.accesoDatos.ProductoData;

/**
 *
 * @author Hp
 */
public class HistorialDeCompras extends javax.swing.JInternalFrame {

    private DefaultTableModel modelo1;
    private DefaultTableModel modelo2;
    Producto p = new Producto();
    Compra c = new Compra();
    ProductoData pd = new ProductoData();
    CompraData cd = new CompraData();

    /**
     * Creates new form HistorialDeCompras
     */
    public HistorialDeCompras() {
        initComponents();
        modelo1 = (DefaultTableModel) jTCompras.getModel();
        modelo2 = (DefaultTableModel) jTProductos.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jDCInicio = new com.toedter.calendar.JDateChooser();
        jDCFin = new com.toedter.calendar.JDateChooser();
        jLHistorialDeCompra = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTCompras = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTProductos = new javax.swing.JTable();
        jBBuscarCompras = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jBBuscarProductos = new javax.swing.JButton();
        jLFechaDeInicio = new javax.swing.JLabel();
        jLFechaFinal = new javax.swing.JLabel();
        jBPEntreFechas = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(102, 102, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 600));

        jLHistorialDeCompra.setFont(new java.awt.Font("Tahoma", 0, 28)); // NOI18N
        jLHistorialDeCompra.setText("Historial de compras");

        jTCompras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Id ", "Fecha"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTCompras.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTCompras);
        if (jTCompras.getColumnModel().getColumnCount() > 0) {
            jTCompras.getColumnModel().getColumn(0).setMinWidth(26);
            jTCompras.getColumnModel().getColumn(0).setMaxWidth(26);
        }

        jTProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "id", "Nombre", "Descripcion", " Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTProductos.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTProductos);
        if (jTProductos.getColumnModel().getColumnCount() > 0) {
            jTProductos.getColumnModel().getColumn(0).setMinWidth(26);
            jTProductos.getColumnModel().getColumn(0).setMaxWidth(26);
        }

        jBBuscarCompras.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBBuscarCompras.setText("Buscar compras");
        jBBuscarCompras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarComprasActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setText("Limpiar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton3.setText("Salir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jBBuscarProductos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBBuscarProductos.setText("Buscar productos");
        jBBuscarProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarProductosActionPerformed(evt);
            }
        });

        jLFechaDeInicio.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLFechaDeInicio.setText("Seleccione fecha de inicio");

        jLFechaFinal.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLFechaFinal.setText("Seleccione fecha final");

        jBPEntreFechas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBPEntreFechas.setText("Buscar productos mas vendidos entre fechas");
        jBPEntreFechas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPEntreFechasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(233, 233, 233)
                .addComponent(jLHistorialDeCompra)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jBBuscarProductos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .addComponent(jBBuscarCompras, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBPEntreFechas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(147, 147, 147))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLFechaDeInicio, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                            .addComponent(jLFechaFinal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(206, 206, 206)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jDCInicio, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                            .addComponent(jDCFin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addGap(139, 139, 139))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLHistorialDeCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDCInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLFechaDeInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jDCFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(43, 43, 43)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBBuscarCompras)
                            .addComponent(jBPEntreFechas))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBBuscarProductos)
                            .addComponent(jButton2)
                            .addComponent(jButton3)))
                    .addComponent(jLFechaFinal))
                .addContainerGap(72, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 784, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 629, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void borrarFilaTabla1() {
        int a = modelo1.getRowCount() - 1;
        for (int i = a; i >= 0; i--) {
            modelo1.removeRow(i);
        }
    }

    public void borrarFilaTabla2() {
        int a = modelo2.getRowCount() - 1;
        for (int i = a; i >= 0; i--) {
            modelo2.removeRow(i);
        }

    }


    private void jBBuscarComprasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarComprasActionPerformed

        Date fecha = jDCInicio.getDate();
        Date fechaf = jDCFin.getDate();
        LocalDate f = fecha.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        if (fecha == null) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fecha de inicio valida");
        } else if (fechaf == null) {

            borrarFilaTabla1();

            List<Compra> comp = cd.ListarComprasPorFecha(f);

            for (Compra x : comp) {

                modelo1.addRow(new Object[]{x.getIdCompra(), x.getFechaDeCompra()});
            }

        } else {
            JOptionPane.showMessageDialog(null, "Ingrese solo fecha de inicio");

            jDCFin.setDate(null);
        }


    }//GEN-LAST:event_jBBuscarComprasActionPerformed

    private void jBBuscarProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarProductosActionPerformed

        borrarFilaTabla2();

        if (jTCompras.getSelectedRow() > -1) {

            int x = (Integer) modelo1.getValueAt(jTCompras.getSelectedRow(), 0);

            c = cd.buscarCompra(x);

            List<Producto> lpc = cd.ProductosDeCompraParticular(c);

            for (Producto xp : lpc) {

                modelo2.addRow(new Object[]{xp.getIdProducto(), xp.getNombreDelProducto(), xp.getDescripcion(), xp.getPrecio()});

            }

        }
// TODO add your handling code here:
    }//GEN-LAST:event_jBBuscarProductosActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        dispose();  // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        borrarFilaTabla1();
        borrarFilaTabla2();
        jDCInicio.setDate(null);
        jDCFin.setDate(null);
    }//GEN-LAST:event_jButton2ActionPerformed

    @SuppressWarnings("null")
    private void jBPEntreFechasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPEntreFechasActionPerformed
        borrarFilaTabla1();
        borrarFilaTabla2();
        Date fecha = jDCInicio.getDate();
        Date fechaf = jDCFin.getDate();
        
       
        
        LocalDate f = fecha.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

        LocalDate ff = fechaf.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        
        
        if (fecha.compareTo(fechaf) > 0 || fecha != null || fechaf != null) {

           

            List<Producto> lpc = cd.MasCompradosEntreFechas(f, ff);

            for (Producto xp : lpc) {

                modelo2.addRow(new Object[]{xp.getIdProducto(), xp.getNombreDelProducto(), xp.getDescripcion(), xp.getPrecio()});}

            } else {   JOptionPane.showMessageDialog(null,"La fecha no puede ser mayor a la actual"); }
    // TODO add your handling code here:
    }//GEN-LAST:event_jBPEntreFechasActionPerformed
     
         
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBBuscarCompras;
    private javax.swing.JButton jBBuscarProductos;
    private javax.swing.JButton jBPEntreFechas;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private com.toedter.calendar.JDateChooser jDCFin;
    private com.toedter.calendar.JDateChooser jDCInicio;
    private javax.swing.JLabel jLFechaDeInicio;
    private javax.swing.JLabel jLFechaFinal;
    private javax.swing.JLabel jLHistorialDeCompra;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTCompras;
    private javax.swing.JTable jTProductos;
    // End of variables declaration//GEN-END:variables
}
